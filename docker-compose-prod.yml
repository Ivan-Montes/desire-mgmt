
name: desire-mgmt-prod

services:

  ms-config-server:
    build: ./config-server
    container_name: config-server
    environment: # Active profile NATIVE. Related to SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS
      #SPRING_PROFILES_ACTIVE: prod
      SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCHLOCATIONS: file:/app/config-repo, file:/app/config-repo/{application}
    networks:
      - desire-mgmt-network
    ports:
      - "8888:8888"
    healthcheck:
      test: "${CONFIGSERVER_HEALTHCHECK_TEST:-wget --no-verbose --tries=1 --spider http://config-server:8888/actuator/health || exit 1}"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: on-failure:3
    
  ms-eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
     - desire-mgmt-network
    ports:
      - "8761:8761"
    restart: on-failure:3
    healthcheck:
      test: "${EUREKA_HEALTHCHECK_TEST:-wget --no-verbose --tries=1 --spider http://eureka-server:8761/actuator/health || exit 1}"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    depends_on:
      ms-config-server:
        condition: service_healthy
  
  ms-api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
     - desire-mgmt-network
    ports:
      - "8080:8080"
    restart: on-failure:3
    depends_on:
      ms-config-server:
        condition: service_healthy
      ms-eureka-server:
        condition: service_healthy
  
  ms-prometheus-server:
    image: 	prom/prometheus:v3.0.1
    container_name: prometheus-server
    volumes:
      - ./prometheus/config:/etc/prometheus
    command: --config.file=/etc/prometheus/prometheus-prod.yml --log.level=debug
    networks:
     - desire-mgmt-network
    ports:
      - "9090:9090"
    restart: on-failure:3
    depends_on:
      ms-eureka-server:
        condition: service_healthy     
  
  ms-grafana-server:
    image: grafana/grafana:latest
    container_name: grafana-server 
    user: '0'
    volumes:
      - ./grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards/dashboard.yml:/etc/grafana/provisioning/dashboards/dashboard.yml
      - ./grafana/dashboards/3662_rev2.json:/etc/grafana/provisioning/dashboards/3662_rev2.json
      - ./grafana/dashboards/prometheus_stats.json:/etc/grafana/provisioning/dashboards/prometheus_stats.json
      - grafana_storage01:/var/lib/grafana
      - grafana_storage02:/etc/grafana 
    networks:
     - desire-mgmt-network
    ports:
      - "3000:3000"    
    restart: on-failure:3
    depends_on:
      - ms-prometheus-server 
          
  ms-products-db:
    image: postgres:17.1-alpine
    container_name: ms-products-db
    environment:
      POSTGRES_PASSWORD: ${SQLDB_PASS}
      POSTGRES_USER: root
      POSTGRES_DB: productsDb
    networks:
     - desire-mgmt-network
    ports:
      - "5432:5432"
     
  ms-orders-db:
    image: postgres:17.1-alpine
    container_name: ms-orders-db
    environment:
      POSTGRES_PASSWORD: ${SQLDB_PASS}
      POSTGRES_USER: root
      POSTGRES_DB: ordersDb
    networks:
     - desire-mgmt-network
    ports:
      - "5433:5432"
      
  ms-customers-db:
    image: postgres:17.1-alpine
    container_name: ms-customers-db
    environment:
      POSTGRES_PASSWORD: ${SQLDB_PASS}
      POSTGRES_USER: root
      POSTGRES_DB: customersDb
    networks:
     - desire-mgmt-network
    ports:
      - "5434:5432"
           
  ms-products-api:
    build: ./ms-products
    container_name: ms-products
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
     - desire-mgmt-network
    restart: on-failure:3
    depends_on:
      ms-config-server:
        condition: service_healthy
      ms-eureka-server:
        condition: service_healthy
      ms-products-db:
        condition: service_started
      
  ms-orders-api:
    build:  ./ms-orders
    container_name: ms-orders
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
     - desire-mgmt-network
    restart: on-failure:3
    depends_on:
      ms-config-server:
        condition: service_healthy
      ms-eureka-server:
        condition: service_healthy
      ms-orders-db:
        condition: service_started
  
  ms-customers-api:
    build: ./ms-customers
    container_name: ms-customers
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
     - desire-mgmt-network
    restart: on-failure:3
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://api-gateway:8080/customers/actuator/health || exit 1"
      interval: 20s
      timeout: 10s
      retries: 7
      start_period: 45s
    depends_on:
      ms-config-server:
        condition: service_healthy
      ms-eureka-server:
        condition: service_healthy
      ms-customers-db:
        condition: service_started

  ms-ui:
    build: ./ms-ui
    container_name: ms-ui
    environment:
      SPRING_PROFILES_ACTIVE: prod
    networks:
     - desire-mgmt-network
    ports:
      - "8081:8081"
    restart: on-failure:3
    depends_on:  
      ms-products-api:
        condition: service_started
      ms-orders-api:
        condition: service_started
      ms-customers-api:
        condition: service_healthy
    
networks:
  desire-mgmt-network:
    name: desire-mgmt-network
    ipam:
      config:
        - subnet: 172.19.33.0/24
          gateway: 172.19.33.1
                    
volumes:
  grafana_storage01: {}
  grafana_storage02: {}
      